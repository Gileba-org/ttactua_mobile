<?php
/**
 * @package     Joomla.Site
 * @subpackage  com_content
 *
 * @copyright   Copyright (C) 2005 - 2018 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 */

defined("_JEXEC") or die();

use Joomla\CMS\Factory;
use Joomla\CMS\HTML\HTMLHelper;
use Joomla\CMS\Layout\LayoutHelper;
use Joomla\CMS\Router\Route;
use Joomla\Component\Content\Administrator\Extension\ContentComponent;
use Joomla\Component\Content\Site\Helper\RouteHelper;
use Joomla\CMS\Uri\Uri;

// Create a shortcut for params.
$params = $this->item->params;
HTMLHelper::addIncludePath(JPATH_COMPONENT . "/helpers/html");
$canEdit = $this->item->params->get("access-edit");
$info = $params->get("info_block_position", 0);

// Check if associations are implemented. If they are, define the parameter.
$assocParam = JLanguageAssociations::isEnabled() && $params->get("show_associations");

$currentDate = Factory::getDate()->format("Y-m-d H:i:s");
$isUnpublished =
	$this->item->state == ContentComponent::CONDITION_UNPUBLISHED ||
	$this->item->publish_up > $currentDate ||
	($this->item->publish_down < $currentDate && $this->item->publish_down !== null);
?>
<?php if ($isUnpublished): ?>
	<div class="system-unpublished">
<?php endif; ?>

<?php echo LayoutHelper::render("joomla.content.blog_style_default_item_title", $this->item); ?>

<?php if ($canEdit || $params->get("show_print_icon") || $params->get("show_email_icon")): ?>
	<?php echo LayoutHelper::render("joomla.content.icons", [
 	"params" => $params,
 	"item" => $this->item,
 	"print" => false,
 ]); ?>
<?php endif; ?>

<?php if ($params->get("show_tags") && !empty($this->item->tags->itemTags)): ?>
	<?php echo LayoutHelper::render("joomla.content.tags", $this->item->tags->itemTags); ?>
<?php endif; ?>

<?php
// Todo Not that elegant would be nice to group the params
?>
<?php $useDefList =
	$params->get("show_publish_date") ||
	$params->get("show_create_date") ||
	$params->get("show_hits") ||
	$params->get("show_category") ||
	$params->get("show_parent_category") ||
	$params->get("show_author") ||
	$assocParam; ?>

<?php if ($useDefList && ($info == 0 || $info == 2)): ?>
	<?php echo LayoutHelper::render("joomla.content.info_block", [
 	"item" => $this->item,
 	"params" => $params,
 	"position" => "above",
 ]); ?>
<?php endif; ?>

<?php echo LayoutHelper::render("joomla.content.intro_image", $this->item); ?>


<?php if (!$params->get("show_intro")): ?>
	<?php
	// Content is generated by content plugin event "onContentAfterTitle"
	?>
	<?php echo $this->item->event->afterDisplayTitle; ?>
<?php endif; ?>
<?php
// Content is generated by content plugin event "onContentBeforeDisplay"
?>
<?php echo $this->item->event->beforeDisplayContent; ?>

<a href="<?php echo Route::_(
	ContentHelperRoute::getArticleRoute($this->item->slug, $this->item->catid, $this->item->language)
); ?>"
	class="bloglink"><?php echo $this->item->introtext; ?></a>

<?php if ($useDefList && ($info == 1 || $info == 2)): ?>
	<?php echo LayoutHelper::render("joomla.content.info_block", [
 	"item" => $this->item,
 	"params" => $params,
 	"position" => "below",
 ]); ?>
<?php endif; ?>

<?php if ($params->get("show_readmore") && $this->item->readmore):
	if ($params->get("access-view")):
		$link = Route::_(
			ContentHelperRoute::getArticleRoute($this->item->slug, $this->item->catid, $this->item->language)
		);
	else:
		$menu = Factory::getApplication()->getMenu();
		$active = $menu->getActive();
		$itemId = $active->id;
		$link = new Uri(Route::_("index.php?option=com_users&view=login&Itemid=" . $itemId, false));
		$link->setVar(
			"return",
			base64_encode(
				ContentHelperRoute::getArticleRoute($this->item->slug, $this->item->catid, $this->item->language)
			)
		);
	endif; ?>

	<?php echo LayoutHelper::render("joomla.content.readmore", [
 	"item" => $this->item,
 	"params" => $params,
 	"link" => $link,
 ]); ?>

<?php
endif; ?>

<?php if ($isUnpublished): ?>
	</div>
<?php endif; ?>

<?php
// Content is generated by content plugin event "onContentAfterDisplay"
?>
<?php echo $this->item->event->afterDisplayContent;
